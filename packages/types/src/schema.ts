import type { WebBuilderMode } from './web-builder'

type ManifestEntry = string

type ManifestPublicPath = string

type ManifestServerProxyPathRewrite = {
  find: RegExp | string
  replacement: string
}[]

interface ManifestExternals {
  [pattern: string]: string /* Patterns: [a-zA-Z]+ */
}

export interface SchemaParseOptions {
  /**
   * manifest file storage directory
   * @default process.cwd()
   */
  root?: string

  /**
   * manifest filename
   * @default growing-web.json
   */
  manifestFileName?: string

  /**
   * 模式
   */
  mode?: WebBuilderMode
}

export type SchemaReadOptions = SchemaParseOptions

export interface WebBuilderProjectConfig {
  /**
   * application entry file.
   */
  entry: ManifestEntry
  /**
   * Build tools publicPath configuration.
   */
  publicPath?: ManifestPublicPath
  /**
   * Shared Dependencies & Common Dependencies.
   */
  externals?: ManifestExternals
  /**
   * local server configuration
   */
  server?: ManifestServer
}

// This file is automatically generated, please do not modify it.
export interface WebBuilderManifest extends WebBuilderProjectConfig {
  /**
   * The version number of the manifest.
   */
  schemaVersion: string
  /**
   * env configuration for different environments.
   */
  env?: {
    [pattern: string]: Partial<WebBuilderProjectConfig> /* Patterns: [a-z]+ */
  }
}

export type ManifestServerProxy = {
  url: string
  target: string
  secure?: boolean
  changeOrigin?: boolean
  pathRewrite?: ManifestServerProxyPathRewrite
}[]

export interface ManifestServer {
  port?: number
  proxy?: ManifestServerProxy
  https?: boolean
  host?: string
}
